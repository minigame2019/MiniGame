//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CubeComponent cube { get { return (CubeComponent)GetComponent(GameComponentsLookup.Cube); } }
    public bool hasCube { get { return HasComponent(GameComponentsLookup.Cube); } }

    public void AddCube(string newName) {
        var index = GameComponentsLookup.Cube;
        var component = (CubeComponent)CreateComponent(index, typeof(CubeComponent));
        component.name = newName;
        AddComponent(index, component);
    }

    public void ReplaceCube(string newName) {
        var index = GameComponentsLookup.Cube;
        var component = (CubeComponent)CreateComponent(index, typeof(CubeComponent));
        component.name = newName;
        ReplaceComponent(index, component);
    }

    public void RemoveCube() {
        RemoveComponent(GameComponentsLookup.Cube);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCube;

    public static Entitas.IMatcher<GameEntity> Cube {
        get {
            if (_matcherCube == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Cube);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCube = matcher;
            }

            return _matcherCube;
        }
    }
}
